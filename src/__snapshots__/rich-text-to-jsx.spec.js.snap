// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rich text to JSX assetNodeToJsx should render an asset hyperlink 1`] = `
<AssetLink
  fields={
    {
      "file": {
        "contentType": "image/jpg",
        "details": {
          "image": {
            "height": 500,
            "width": 800,
          },
          "size": 240963,
        },
        "fileName": "random-unsplash.jpg",
        "url": "https://source.unsplash.com/random/800x500",
      },
      "title": "Random photo from Unsplash.com",
    }
  }
  sys={
    {
      "id": "4fgGUXCJXWOQUAEQqCS8MW",
      "updatedAt": "2019-01-14T04:57:27.049Z",
    }
  }
>
  ham hock
</AssetLink>
`;

exports[`Rich text to JSX assetNodeToJsx should render an asset hyperlink override 1`] = `
<Override
  fields={
    {
      "file": {
        "contentType": "image/jpg",
        "details": {
          "image": {
            "height": 500,
            "width": 800,
          },
          "size": 240963,
        },
        "fileName": "random-unsplash.jpg",
        "url": "https://source.unsplash.com/random/800x500",
      },
      "title": "Random photo from Unsplash.com",
    }
  }
  sys={
    {
      "id": "4fgGUXCJXWOQUAEQqCS8MW",
      "updatedAt": "2019-01-14T04:57:27.049Z",
    }
  }
>
  ham hock
</Override>
`;

exports[`Rich text to JSX assetNodeToJsx should render an embedded asset override 1`] = `
<Override
  fields={
    {
      "file": {
        "contentType": "image/jpg",
        "details": {
          "image": {
            "height": 500,
            "width": 800,
          },
          "size": 240963,
        },
        "fileName": "random-unsplash.jpg",
        "url": "https://source.unsplash.com/random/800x500",
      },
      "title": "Random photo from Unsplash.com",
    }
  }
  sys={
    {
      "id": "4fgGUXCJXWOQUAEQqCS8MW",
      "updatedAt": "2019-01-14T04:57:27.049Z",
    }
  }
/>
`;

exports[`Rich text to JSX assetNodeToJsx should render an embedded audio 1`] = `
<Audio
  fields={
    {
      "file": {
        "contentType": "audio/mp3",
        "details": {
          "size": 24096,
        },
        "fileName": "example.mp3",
        "url": "https://spotify.com/example.mp3",
      },
      "title": "Example audio from Spotify",
    }
  }
  sys={
    {
      "id": "4fgGUXCJXWOQUAEQqCS8MW",
      "updatedAt": "2019-01-14T04:57:27.049Z",
    }
  }
/>
`;

exports[`Rich text to JSX assetNodeToJsx should render an embedded image 1`] = `
<Image
  fields={
    {
      "file": {
        "contentType": "image/jpg",
        "details": {
          "image": {
            "height": 500,
            "width": 800,
          },
          "size": 240963,
        },
        "fileName": "random-unsplash.jpg",
        "url": "https://source.unsplash.com/random/800x500",
      },
      "title": "Random photo from Unsplash.com",
    }
  }
  sys={
    {
      "id": "4fgGUXCJXWOQUAEQqCS8MW",
      "updatedAt": "2019-01-14T04:57:27.049Z",
    }
  }
/>
`;

exports[`Rich text to JSX assetNodeToJsx should render an embedded video 1`] = `
<Video
  fields={
    {
      "file": {
        "contentType": "video/mp4",
        "details": {
          "size": 2409638,
          "video": {
            "height": 1080,
            "width": 1920,
          },
        },
        "fileName": "example.mp4",
        "url": "https://youtube.com/example.mp4",
      },
      "title": "Example video from YouTube",
    }
  }
  sys={
    {
      "id": "4fgGUXCJXWOQUAEQqCS8MW",
      "updatedAt": "2019-01-14T04:57:27.049Z",
    }
  }
/>
`;

exports[`Rich text to JSX assetNodeToJsx should render an unknown element if the mime type is undefined 1`] = `<UnknownElement />`;

exports[`Rich text to JSX assetNodeToJsx should render an unknown element if there is no component for the mime type 1`] = `
<UnknownElement
  file={
    {
      "contentType": "spreadsheet",
    }
  }
/>
`;

exports[`Rich text to JSX entryNodeToJsx should render an embedded entry block override 1`] = `
<Override
  fields={
    {
      "slug": "about",
      "title": "Title: About Acme Corp",
    }
  }
  sys={
    {
      "contentType": {
        "sys": {
          "id": "page",
        },
      },
      "id": "32v7TZ7YQEaugOeew4SymY",
      "updatedAt": "2019-01-18T14:37:30.221Z",
    }
  }
/>
`;

exports[`Rich text to JSX entryNodeToJsx should render an embedded entry inline override 1`] = `
<Override
  fields={
    {
      "slug": "about",
      "title": "Title: About Acme Corp",
    }
  }
  sys={
    {
      "contentType": {
        "sys": {
          "id": "page",
        },
      },
      "id": "32v7TZ7YQEaugOeew4SymY",
      "updatedAt": "2019-01-18T14:37:30.221Z",
    }
  }
/>
`;

exports[`Rich text to JSX entryNodeToJsx should render an entry hyperlink override 1`] = `
<Override
  fields={
    {
      "slug": "about",
      "title": "Title: About Acme Corp",
    }
  }
  sys={
    {
      "contentType": {
        "sys": {
          "id": "page",
        },
      },
      "id": "32v7TZ7YQEaugOeew4SymY",
      "updatedAt": "2019-01-18T14:37:30.221Z",
    }
  }
>
  This is a link to an entry.
</Override>
`;

exports[`Rich text to JSX entryNodeToJsx should render an unknown element if the content type is undefined 1`] = `<UnknownElement />`;

exports[`Rich text to JSX nodeToJsx should render an unknown element if the node type is undefined 1`] = `<UnknownElement />`;

exports[`Rich text to JSX parentNodeToJsx should render a node and its children 1`] = `
<ul>
  <li>
    <p>
      This is normal text.
      <strong>
        This is bold text.
      </strong>
      <em>
        This is italic text.
      </em>
      <u>
        This is underlined text.
      </u>
      <a
        href="https://acme.com"
      >
        This is a hyperlink.
      </a>
    </p>
  </li>
  <li>
    <p>
      This is normal text.
      <strong>
        This is bold text.
      </strong>
      <em>
        This is italic text.
      </em>
      <u>
        This is underlined text.
      </u>
      <a
        href="https://acme.com"
      >
        This is a hyperlink.
      </a>
    </p>
  </li>
  <li>
    <p>
      This is normal text.
      <strong>
        This is bold text.
      </strong>
      <em>
        This is italic text.
      </em>
      <u>
        This is underlined text.
      </u>
      <a
        href="https://acme.com"
      >
        This is a hyperlink.
      </a>
    </p>
  </li>
</ul>
`;

exports[`Rich text to JSX parentNodeToJsx should render a node without children 1`] = `<hr />`;

exports[`Rich text to JSX richTextToJsx should parse and render rich text into JSX 1`] = `
[
  <p>
    This is normal text.
    <strong>
      This is bold text.
    </strong>
    <em>
      This is italic text.
    </em>
    <u>
      This is underlined text.
    </u>
    <a
      href="https://acme.com"
    >
      This is a hyperlink.
    </a>
  </p>,
  <BlockElement
    fields={
      {
        "slug": "about",
        "title": "Title: About Acme Corp",
      }
    }
    sys={
      {
        "contentType": {
          "sys": {
            "id": "page",
          },
        },
        "id": "32v7TZ7YQEaugOeew4SymY",
        "updatedAt": "2019-01-18T14:37:30.221Z",
      }
    }
  />,
  <Image
    fields={
      {
        "file": {
          "contentType": "image/jpg",
          "details": {
            "image": {
              "height": 500,
              "width": 800,
            },
            "size": 240963,
          },
          "fileName": "random-unsplash.jpg",
          "url": "https://source.unsplash.com/random/800x500",
        },
        "title": "Random photo from Unsplash.com",
      }
    }
    sys={
      {
        "id": "4fgGUXCJXWOQUAEQqCS8MW",
        "updatedAt": "2019-01-14T04:57:27.049Z",
      }
    }
  />,
  <Table>
    <tr>
      <th>
        <p>
          A 1
        </p>
      </th>
      <th>
        <p>
          B 1
        </p>
      </th>
    </tr>
    <tr>
      <td>
        <p>
          A 2
        </p>
      </td>
      <td>
        <p>
          B 2
        </p>
      </td>
    </tr>
  </Table>,
]
`;

exports[`Rich text to JSX textNodeToJsx should render a text node 1`] = `"This is normal text."`;

exports[`Rich text to JSX textNodeToJsx should render a text node with a mark 1`] = `
<strong>
  This is bold text.
</strong>
`;

exports[`Rich text to JSX textNodeToJsx should render a text node with multiple marks 1`] = `
<em>
  <strong>
    This is bold and italic text.
  </strong>
</em>
`;

exports[`Rich text to JSX unknownNodeToJsx should render an unknown element 1`] = `
<UnknownElement>
  This is normal text.
  <strong>
    This is bold text.
  </strong>
  <em>
    This is italic text.
  </em>
  <u>
    This is underlined text.
  </u>
  <a
    href="https://acme.com"
  >
    This is a hyperlink.
  </a>
</UnknownElement>
`;
